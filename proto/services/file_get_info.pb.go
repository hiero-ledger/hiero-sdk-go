//*
// # File Get Information
// Messages for a query to retrieve the metadata for a file in the
// Hedera File Service (HFS).
//
// The query defined here does not include the content of the file.
//
// ### Keywords
// The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
// "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
// document are to be interpreted as described in
// [RFC2119](https://www.ietf.org/rfc/rfc2119) and clarified in
// [RFC8174](https://www.ietf.org/rfc/rfc8174).

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v4.25.3
// source: file_get_info.proto

package services

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Query to request file metadata from the Hedera File Service (HFS).<br/>
// This query requests all of the information _about_ a file, but none of the
// _content_ of a file. A client should submit a `fileGetContents` query to
// view the content of a file. File content _may_ also be available from a
// block node or mirror node, generally at lower cost.
//
// File metadata SHALL be available for active files and deleted files.<br/>
// The size of a deleted file SHALL be `0` and the content SHALL be empty.
type FileGetInfoQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// *
	// Standard information sent with every query operation.<br/>
	// This includes the signed payment and what kind of response is requested
	// (cost, state proof, both, or neither).
	Header *QueryHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// *
	// A file identifier.
	// <p>
	// This MUST be the identifier of a file that exists in HFS.<br/>
	// This value SHALL identify the file to be queried.
	FileID *FileID `protobuf:"bytes,2,opt,name=fileID,proto3" json:"fileID,omitempty"`
}

func (x *FileGetInfoQuery) Reset() {
	*x = FileGetInfoQuery{}
	mi := &file_file_get_info_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileGetInfoQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileGetInfoQuery) ProtoMessage() {}

func (x *FileGetInfoQuery) ProtoReflect() protoreflect.Message {
	mi := &file_file_get_info_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileGetInfoQuery.ProtoReflect.Descriptor instead.
func (*FileGetInfoQuery) Descriptor() ([]byte, []int) {
	return file_file_get_info_proto_rawDescGZIP(), []int{0}
}

func (x *FileGetInfoQuery) GetHeader() *QueryHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *FileGetInfoQuery) GetFileID() *FileID {
	if x != nil {
		return x.FileID
	}
	return nil
}

// *
// A response to a query for the metadata of a file in the HFS.
type FileGetInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// *
	// The standard response information for queries.<br/>
	// This includes the values requested in the `QueryHeader`
	// (cost, state proof, both, or neither).
	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// *
	// A combination of fields from the requested file metadata.
	// <p>
	// This SHALL NOT be set if the identified file does not exist
	// or has expired.
	FileInfo *FileGetInfoResponse_FileInfo `protobuf:"bytes,2,opt,name=fileInfo,proto3" json:"fileInfo,omitempty"`
}

func (x *FileGetInfoResponse) Reset() {
	*x = FileGetInfoResponse{}
	mi := &file_file_get_info_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileGetInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileGetInfoResponse) ProtoMessage() {}

func (x *FileGetInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_get_info_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileGetInfoResponse.ProtoReflect.Descriptor instead.
func (*FileGetInfoResponse) Descriptor() ([]byte, []int) {
	return file_file_get_info_proto_rawDescGZIP(), []int{1}
}

func (x *FileGetInfoResponse) GetHeader() *ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *FileGetInfoResponse) GetFileInfo() *FileGetInfoResponse_FileInfo {
	if x != nil {
		return x.FileInfo
	}
	return nil
}

type FileGetInfoResponse_FileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// *
	// A file identifier.
	// <p>
	// This SHALL be the identifier of a file that exists in HFS.<br/>
	// This value SHALL identify the file that was queried.
	FileID *FileID `protobuf:"bytes,1,opt,name=fileID,proto3" json:"fileID,omitempty"`
	// *
	// A size, in bytes, for the file.
	Size int64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	// *
	// An expiration timestamp.
	// <p>
	// The file SHALL NOT expire before the network consensus time
	// exceeds this value.<br/>
	// The file SHALL expire after the network consensus time
	// exceeds this value.<br/>
	ExpirationTime *Timestamp `protobuf:"bytes,3,opt,name=expirationTime,proto3" json:"expirationTime,omitempty"`
	// *
	// A flag indicating this file is deleted.
	// <p>
	// A deleted file SHALL have a size `0` and empty content.
	Deleted bool `protobuf:"varint,4,opt,name=deleted,proto3" json:"deleted,omitempty"`
	// *
	// A KeyList listing all keys that "own" the file.
	// <p>
	// All keys in this list MUST sign a transaction to append to the
	// file content, or to modify file metadata.<br/>
	// At least _one_ key in this list MUST sign a transaction to delete
	// this file.<br/>
	// If this is an empty `KeyList`, the file is immutable, cannot be
	// modified or deleted, but MAY expire. A `fileUpdate` transaction MAY
	// extend the expiration time for an immutable file.
	Keys *KeyList `protobuf:"bytes,5,opt,name=keys,proto3" json:"keys,omitempty"`
	// *
	// A short description for this file.
	// <p>
	// This value, if set, MUST NOT exceed `transaction.maxMemoUtf8Bytes`
	// (default 100) bytes when encoded as UTF-8.
	Memo string `protobuf:"bytes,6,opt,name=memo,proto3" json:"memo,omitempty"`
	// *
	// A ledger identifier for the responding network.
	// <p>
	// This value SHALL identify the distributed ledger that responded to
	// this query.
	LedgerId []byte `protobuf:"bytes,7,opt,name=ledger_id,json=ledgerId,proto3" json:"ledger_id,omitempty"`
}

func (x *FileGetInfoResponse_FileInfo) Reset() {
	*x = FileGetInfoResponse_FileInfo{}
	mi := &file_file_get_info_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileGetInfoResponse_FileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileGetInfoResponse_FileInfo) ProtoMessage() {}

func (x *FileGetInfoResponse_FileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_file_get_info_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileGetInfoResponse_FileInfo.ProtoReflect.Descriptor instead.
func (*FileGetInfoResponse_FileInfo) Descriptor() ([]byte, []int) {
	return file_file_get_info_proto_rawDescGZIP(), []int{1, 0}
}

func (x *FileGetInfoResponse_FileInfo) GetFileID() *FileID {
	if x != nil {
		return x.FileID
	}
	return nil
}

func (x *FileGetInfoResponse_FileInfo) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FileGetInfoResponse_FileInfo) GetExpirationTime() *Timestamp {
	if x != nil {
		return x.ExpirationTime
	}
	return nil
}

func (x *FileGetInfoResponse_FileInfo) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

func (x *FileGetInfoResponse_FileInfo) GetKeys() *KeyList {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *FileGetInfoResponse_FileInfo) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *FileGetInfoResponse_FileInfo) GetLedgerId() []byte {
	if x != nil {
		return x.LedgerId
	}
	return nil
}

var File_file_get_info_proto protoreflect.FileDescriptor

var file_file_get_info_proto_rawDesc = []byte{
	0x0a, 0x13, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x62,
	0x61, 0x73, 0x69, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x12, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x65, 0x0a, 0x10, 0x46,
	0x69, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x2a, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x06, 0x66,
	0x69, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65,
	0x49, 0x44, 0x22, 0xf6, 0x02, 0x0a, 0x13, 0x46, 0x69, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0xee, 0x01, 0x0a, 0x08, 0x46,
	0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x12, 0x38, 0x0a, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4b, 0x65, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65,
	0x6d, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x12, 0x1b,
	0x0a, 0x09, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x08, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x49, 0x64, 0x42, 0x26, 0x0a, 0x22, 0x63,
	0x6f, 0x6d, 0x2e, 0x68, 0x65, 0x64, 0x65, 0x72, 0x61, 0x68, 0x61, 0x73, 0x68, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6a, 0x61, 0x76,
	0x61, 0x50, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_file_get_info_proto_rawDescOnce sync.Once
	file_file_get_info_proto_rawDescData = file_file_get_info_proto_rawDesc
)

func file_file_get_info_proto_rawDescGZIP() []byte {
	file_file_get_info_proto_rawDescOnce.Do(func() {
		file_file_get_info_proto_rawDescData = protoimpl.X.CompressGZIP(file_file_get_info_proto_rawDescData)
	})
	return file_file_get_info_proto_rawDescData
}

var file_file_get_info_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_file_get_info_proto_goTypes = []any{
	(*FileGetInfoQuery)(nil),             // 0: proto.FileGetInfoQuery
	(*FileGetInfoResponse)(nil),          // 1: proto.FileGetInfoResponse
	(*FileGetInfoResponse_FileInfo)(nil), // 2: proto.FileGetInfoResponse.FileInfo
	(*QueryHeader)(nil),                  // 3: proto.QueryHeader
	(*FileID)(nil),                       // 4: proto.FileID
	(*ResponseHeader)(nil),               // 5: proto.ResponseHeader
	(*Timestamp)(nil),                    // 6: proto.Timestamp
	(*KeyList)(nil),                      // 7: proto.KeyList
}
var file_file_get_info_proto_depIdxs = []int32{
	3, // 0: proto.FileGetInfoQuery.header:type_name -> proto.QueryHeader
	4, // 1: proto.FileGetInfoQuery.fileID:type_name -> proto.FileID
	5, // 2: proto.FileGetInfoResponse.header:type_name -> proto.ResponseHeader
	2, // 3: proto.FileGetInfoResponse.fileInfo:type_name -> proto.FileGetInfoResponse.FileInfo
	4, // 4: proto.FileGetInfoResponse.FileInfo.fileID:type_name -> proto.FileID
	6, // 5: proto.FileGetInfoResponse.FileInfo.expirationTime:type_name -> proto.Timestamp
	7, // 6: proto.FileGetInfoResponse.FileInfo.keys:type_name -> proto.KeyList
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_file_get_info_proto_init() }
func file_file_get_info_proto_init() {
	if File_file_get_info_proto != nil {
		return
	}
	file_timestamp_proto_init()
	file_basic_types_proto_init()
	file_query_header_proto_init()
	file_response_header_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_file_get_info_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_file_get_info_proto_goTypes,
		DependencyIndexes: file_file_get_info_proto_depIdxs,
		MessageInfos:      file_file_get_info_proto_msgTypes,
	}.Build()
	File_file_get_info_proto = out.File
	file_file_get_info_proto_rawDesc = nil
	file_file_get_info_proto_goTypes = nil
	file_file_get_info_proto_depIdxs = nil
}
