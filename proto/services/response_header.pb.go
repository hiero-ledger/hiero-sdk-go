//*
// # Response Header
// A standard header for all query responses.
//
// ### Keywords
// The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
// "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
// document are to be interpreted as described in
// [RFC2119](https://www.ietf.org/rfc/rfc2119) and clarified in
// [RFC8174](https://www.ietf.org/rfc/rfc8174).

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: response_header.proto

package services

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// A standard header returned with every query response.
//
// The fields for `cost` or `stateProof` MAY be unset if the requested
// `ResponseType` does not request those values.<br/>
// The `responseType` SHALL match the request response type.<br/>
// The `nodeTransactionPrecheckCode` field SHALL contain the result code
// for the query.
type ResponseHeader struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// *
	// The result code for this query.
	// <p>
	// This value SHALL indicate either success or the reason for failure.
	NodeTransactionPrecheckCode ResponseCodeEnum `protobuf:"varint,1,opt,name=nodeTransactionPrecheckCode,proto3,enum=proto.ResponseCodeEnum" json:"nodeTransactionPrecheckCode,omitempty"`
	// *
	// The response type requested for this query.
	// <p>
	// This SHALL be the response type requested in the query header.
	ResponseType ResponseType `protobuf:"varint,2,opt,name=responseType,proto3,enum=proto.ResponseType" json:"responseType,omitempty"`
	// *
	// Requested cost estimate.<br/>
	// This is the fee that _would be_ charged if the query was executed.
	// <p>
	// This value SHALL be set if the response type requested requires cost
	// information, and SHALL NOT be set otherwise.<br/>
	// This value SHALL include the query fee, but SHALL NOT include the
	// transfer fee required to execute the fee payment transaction.
	Cost uint64 `protobuf:"varint,3,opt,name=cost,proto3" json:"cost,omitempty"`
	// *
	// A state proof for the information requested.
	//
	// This field SHALL NOT be set if the response type does not require
	// a state proof.<br/>
	// This field SHALL NOT be set if a state proof is not available for
	// the query type.<br/>
	// This field SHALL be set if the response type requested a state proof
	// and a state proof is available.
	StateProof    []byte `protobuf:"bytes,4,opt,name=stateProof,proto3" json:"stateProof,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResponseHeader) Reset() {
	*x = ResponseHeader{}
	mi := &file_response_header_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseHeader) ProtoMessage() {}

func (x *ResponseHeader) ProtoReflect() protoreflect.Message {
	mi := &file_response_header_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseHeader.ProtoReflect.Descriptor instead.
func (*ResponseHeader) Descriptor() ([]byte, []int) {
	return file_response_header_proto_rawDescGZIP(), []int{0}
}

func (x *ResponseHeader) GetNodeTransactionPrecheckCode() ResponseCodeEnum {
	if x != nil {
		return x.NodeTransactionPrecheckCode
	}
	return ResponseCodeEnum_OK
}

func (x *ResponseHeader) GetResponseType() ResponseType {
	if x != nil {
		return x.ResponseType
	}
	return ResponseType_ANSWER_ONLY
}

func (x *ResponseHeader) GetCost() uint64 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *ResponseHeader) GetStateProof() []byte {
	if x != nil {
		return x.StateProof
	}
	return nil
}

var File_response_header_proto protoreflect.FileDescriptor

const file_response_header_proto_rawDesc = "" +
	"\n" +
	"\x15response_header.proto\x12\x05proto\x1a\x12query_header.proto\x1a\x13response_code.proto\"\xd8\x01\n" +
	"\x0eResponseHeader\x12Y\n" +
	"\x1bnodeTransactionPrecheckCode\x18\x01 \x01(\x0e2\x17.proto.ResponseCodeEnumR\x1bnodeTransactionPrecheckCode\x127\n" +
	"\fresponseType\x18\x02 \x01(\x0e2\x13.proto.ResponseTypeR\fresponseType\x12\x12\n" +
	"\x04cost\x18\x03 \x01(\x04R\x04cost\x12\x1e\n" +
	"\n" +
	"stateProof\x18\x04 \x01(\fR\n" +
	"stateProofB&\n" +
	"\"com.hederahashgraph.api.proto.javaP\x01b\x06proto3"

var (
	file_response_header_proto_rawDescOnce sync.Once
	file_response_header_proto_rawDescData []byte
)

func file_response_header_proto_rawDescGZIP() []byte {
	file_response_header_proto_rawDescOnce.Do(func() {
		file_response_header_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_response_header_proto_rawDesc), len(file_response_header_proto_rawDesc)))
	})
	return file_response_header_proto_rawDescData
}

var file_response_header_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_response_header_proto_goTypes = []any{
	(*ResponseHeader)(nil), // 0: proto.ResponseHeader
	(ResponseCodeEnum)(0),  // 1: proto.ResponseCodeEnum
	(ResponseType)(0),      // 2: proto.ResponseType
}
var file_response_header_proto_depIdxs = []int32{
	1, // 0: proto.ResponseHeader.nodeTransactionPrecheckCode:type_name -> proto.ResponseCodeEnum
	2, // 1: proto.ResponseHeader.responseType:type_name -> proto.ResponseType
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_response_header_proto_init() }
func file_response_header_proto_init() {
	if File_response_header_proto != nil {
		return
	}
	file_query_header_proto_init()
	file_response_code_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_response_header_proto_rawDesc), len(file_response_header_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_response_header_proto_goTypes,
		DependencyIndexes: file_response_header_proto_depIdxs,
		MessageInfos:      file_response_header_proto_msgTypes,
	}.Build()
	File_response_header_proto = out.File
	file_response_header_proto_goTypes = nil
	file_response_header_proto_depIdxs = nil
}
