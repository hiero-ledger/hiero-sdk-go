//*
// # Token Associate
// Transaction to associate an Hedera Token Service (HTS) token with an
// account.<br/>
// Accounts cannot transact in a token (send or receive) until the account
// and token are associated.
//
// > Note
// >> An "airdrop" transaction MAY initiate sending tokens to an
// >> unassociated account, but the transfer remains in a "pending"
// >> state until the recipient executes a "claim" transaction
// >> that both accepts the tokens and associates that account
// >> with the token type.
//
// ### Keywords
// The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
// "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
// document are to be interpreted as described in
// [RFC2119](https://www.ietf.org/rfc/rfc2119) and clarified in
// [RFC8174](https://www.ietf.org/rfc/rfc8174).

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v4.25.3
// source: token_associate.proto

package services

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Associate an Hedera Token Service (HTS) token and an account.
//
// An association MUST exist between an account and a token before that
// account may transfer or receive that token.<br/>
// If the identified account is not found,
// the transaction SHALL return `INVALID_ACCOUNT_ID`.<br/>
// If the identified account has been deleted,
// the transaction SHALL return `ACCOUNT_DELETED`.<br/>
// If any of the identified tokens is not found,
// the transaction SHALL return `INVALID_TOKEN_REF`.<br/>
// If any of the identified tokens has been deleted,
// the transaction SHALL return `TOKEN_WAS_DELETED`.<br/>
// If an association already exists for any of the identified tokens,
// the transaction SHALL return `TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT`.<br/>
// The identified account MUST sign this transaction.
//
// ### Block Stream Effects
// None
type TokenAssociateTransactionBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// *
	// An account identifier.
	// <p>
	// The identified account SHALL be associated to each of the
	// tokens identified in the `tokens` field.<br/>
	// This field is REQUIRED and MUST be a valid account identifier.<br/>
	// The identified account MUST exist in state.<br/>
	// The identified account MUST NOT be deleted.<br/>
	// The identified account MUST NOT be expired.
	Account *AccountID `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	// *
	// A list of token identifiers.
	// <p>
	// Each token identified in this list SHALL be separately associated with
	// the account identified in the `account` field.<br/>
	// This list MUST NOT be empty.
	// Each entry in this list MUST be a valid token identifier.<br/>
	// Each entry in this list MUST NOT be currently associated to the
	// account identified in `account`.<br/>
	// Each entry in this list MUST NOT be expired.<br/>
	// Each entry in this list MUST NOT be deleted.
	Tokens []*TokenID `protobuf:"bytes,2,rep,name=tokens,proto3" json:"tokens,omitempty"`
}

func (x *TokenAssociateTransactionBody) Reset() {
	*x = TokenAssociateTransactionBody{}
	mi := &file_token_associate_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenAssociateTransactionBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenAssociateTransactionBody) ProtoMessage() {}

func (x *TokenAssociateTransactionBody) ProtoReflect() protoreflect.Message {
	mi := &file_token_associate_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenAssociateTransactionBody.ProtoReflect.Descriptor instead.
func (*TokenAssociateTransactionBody) Descriptor() ([]byte, []int) {
	return file_token_associate_proto_rawDescGZIP(), []int{0}
}

func (x *TokenAssociateTransactionBody) GetAccount() *AccountID {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *TokenAssociateTransactionBody) GetTokens() []*TokenID {
	if x != nil {
		return x.Tokens
	}
	return nil
}

var File_token_associate_proto protoreflect.FileDescriptor

var file_token_associate_proto_rawDesc = []byte{
	0x0a, 0x15, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11,
	0x62, 0x61, 0x73, 0x69, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x73, 0x0a, 0x1d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69,
	0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f,
	0x64, 0x79, 0x12, 0x2a, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x44, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26,
	0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x44, 0x52, 0x06,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x42, 0x26, 0x0a, 0x22, 0x63, 0x6f, 0x6d, 0x2e, 0x68, 0x65,
	0x64, 0x65, 0x72, 0x61, 0x68, 0x61, 0x73, 0x68, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6a, 0x61, 0x76, 0x61, 0x50, 0x01, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_token_associate_proto_rawDescOnce sync.Once
	file_token_associate_proto_rawDescData = file_token_associate_proto_rawDesc
)

func file_token_associate_proto_rawDescGZIP() []byte {
	file_token_associate_proto_rawDescOnce.Do(func() {
		file_token_associate_proto_rawDescData = protoimpl.X.CompressGZIP(file_token_associate_proto_rawDescData)
	})
	return file_token_associate_proto_rawDescData
}

var file_token_associate_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_token_associate_proto_goTypes = []any{
	(*TokenAssociateTransactionBody)(nil), // 0: proto.TokenAssociateTransactionBody
	(*AccountID)(nil),                     // 1: proto.AccountID
	(*TokenID)(nil),                       // 2: proto.TokenID
}
var file_token_associate_proto_depIdxs = []int32{
	1, // 0: proto.TokenAssociateTransactionBody.account:type_name -> proto.AccountID
	2, // 1: proto.TokenAssociateTransactionBody.tokens:type_name -> proto.TokenID
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_token_associate_proto_init() }
func file_token_associate_proto_init() {
	if File_token_associate_proto != nil {
		return
	}
	file_basic_types_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_token_associate_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_token_associate_proto_goTypes,
		DependencyIndexes: file_token_associate_proto_depIdxs,
		MessageInfos:      file_token_associate_proto_msgTypes,
	}.Build()
	File_token_associate_proto = out.File
	file_token_associate_proto_rawDesc = nil
	file_token_associate_proto_goTypes = nil
	file_token_associate_proto_depIdxs = nil
}
